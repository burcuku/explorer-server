### The configuration file for the exploration of distributed system executions

## Server connection configuration
portNumber = 4444

numberOfClients = 3

#randomSeed = 12346496
randomSeed = 12345678

## Scheduler configuration
# The scheduler to use:
#scheduler = explorer.scheduler.NopScheduler
# scheduler = explorer.scheduler.ReplayingScheduler
scheduler = explorer.scheduler.FailureInjectingScheduler

# The file containing the schedule to be replayed (effective only for ReplayingScheduler)
# The file reproduces cas6023 with no retry (order of prepare-responses are important)
#scheduleFile = schedules/cas6023.txt
# The file reproduces cas6023 with retry (prepare-responses are important - 0 must be at the end)
#scheduleFile = schedules/cas6023-retry-1-with-payloads.txt
# The file reproduces cas6023 with retry (order of prepare-responses are not important - 0 is dropped)
scheduleFile = schedules/cas6023-retry-2-with-payloads.txt

# Whether the message content/payload will be read in the file (effective only for ReplayingScheduler)
scheduleHasMsgContent = true

# Location of the binaries of target system.
targetDirectory = /home/paper387/explorer-server/cassandra-6023
# Location of the initial data, required to bootstrap the nodes
initialDataDirectory = /home/paper387/explorer-server/cassandra/run
# Parent of per-node directories, where the nodes will use in runtime
runDirectory = /home/paper387/explorer-server/cassandra/init_data

# Path to the java executable
javaPath = /home/paper387/.jenv/shims/java



### Workload Configurations

clusterPort = 9042
poolTimeoutMillis = 7500
# 2500 is ok for info level logging printed
readTimeoutMillis = 2500
# wait between that amount of time between sending successive query requests
timeBetweenQueriesMillis = 500
